{"version":3,"sources":["styleds.js","utils.js","week.js","month.js","app.js","index.js"],"names":["Wrapper","styled","div","MonthNameWrapper","WeekDay","h3","DaysWrapper","DatasWrapper","attrs","x","y","style","top","left","MonthDay","currentMonth","currentDate","selected","hovered","MonthWrapper","EventsBlock","EventDot","priority","EventsPopover","days","months","years","Array","fill","map","el","i","getDate","date","fullDate","Date","dd","mm","getMonth","YYYY","getFullYear","transformDateFormat","splitD","split","createFullField","year","month","firstDate","lastDate","setMonth","setDate","firstDay","getUTCDay","lastDay","datesLength","_el","transformToNeedFormat","newDate","createRangeDates","dates","newDates","sort","diff","WeekDays","d","key","MonthDays","onChange","selectedDates","changeMonth","changeYear","onHover","rangeDates","events","useState","eventsBlock","showEventsBlock","datesWrapperRef","useRef","useEffect","current","scrollTop","offsetWeeks","parseInt","targetDate","content","desc","ref","currentEvents","filter","some","onClick","onMouseOver","e","length","clientY","clientX","handleMouseOver","App","values","select","onApply","monthWrapperRef","coordsMonth","changeCoordsMonth","changeDates","console","log","createSelected","changeSelectedDates","event","mappedEvents","changeRangeDates","handleChange","useCallback","period","handleApply","newSelectedDates","handleClear","getBoundingClientRect","onWheel","deltaY","slice","startDate","createStartDates","newMonth","currentTarget","value","newYear","hover","arr","createHoveredDates","float","marginTop","fontSize","padding","margin","dummyEvents","render","display","width","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.b0525200.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 360px;\n  border: 1px solid black;\n  padding: 0;\n  margin: 30px;\n`;\n\nexport const MonthNameWrapper = styled.div`\n  height: 30px;\n  outline: 1px solid black;\n  display: flex;\n  justify-content: center;\n`;\nexport const MonthName = styled.h3`\n  text-align: center;\n`;\nexport const WeekDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-basis: calc(100% / 7);\n  outline: 1px solid black;\n`;\nexport const DaysWrapper = styled.div`\n  display: flex;\n`;\nexport const DatasWrapper = styled.div.attrs(({x,y}) => ({\n  style: {\n    top: `${y}px`, \n    left: `${x + 5}px`, \n  }\n}))`\n  display: flex;\n  flex-wrap: wrap;\n  ::-webkit-scrollbar {\n    width: 0px;\n  }\n  \n\n  \n  width: 360px;\n  position: fixed;\n  height: 350px;\n  overflow-y: scroll;\n\n\n\n  \n`;\n\nconst getBgc = ({ currentMonth, currentDate, selected, hovered }) => {\n  if (selected && currentDate) return \"rgba(153, 0, 0)\";\n  if (selected && currentMonth) return \"rgba(255, 0, 0, 0.8)\";\n  if (selected) return \"rgba(255, 0, 0, 0.4)\";\n  if (currentDate) return \"rgba(255, 0, 0, 1)\";\n  if (hovered) return \"rgba(126, 246, 252)\";\n  if (currentMonth) return \"rgba(255, 0, 0, 0.2)\";\n  return;\n};\n\nexport const MonthDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  flex-basis: 50px;\n  cursor: pointer;\n  height: 50px;\n  background-color: ${getBgc};\n\n\n`;\nexport const MonthWrapper = styled.div`\n  height: 350px;\n  overflow: hidden;\n  border: 5px solid red;\n`;\n\nexport const EventsBlock = styled.div`\n  display: flex; \n  position: absolute; \n  transform: translateY(18px);\n`;\n\nconst getColor = ({ priority }) => {\n  switch (priority) {\n    case 1:\n      return '#eddf3e'\n    case 2:\n      return '#f77800'\n    case 3:\n      return '#780000'\n    default:\n\n  }\n}\n\n\nexport const EventDot = styled.div`\n  width: 8px; \n  height: 8px; \n  background-color: ${getColor};  \n  border-radius: 50%;\n`\n\nexport const EventsPopover = styled.div.attrs(({ top, left }) => ({\n  style: {\n    top: `${top + 10}px`,\n    left: `${left + 10}px`\n  }\n}))`\n  position: fixed;\n  z-index: 99999;\n  border: 1px solid black;\n  background-color: white;\n  width: 150px;\n`","export const days = [\"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\", \"вс\"];\nexport const months = [\n  \"Январь\",\n  \"Февраль\",\n  \"Март\",\n  \"Апрель\",\n  \"Май\",\n  \"Июнь\",\n  \"Июль\",\n  \"Август\",\n  \"Сентябрь\",\n  \"Октябрь\",\n  \"Ноябрь\",\n  \"Декабрь\"\n];\nexport const years = new Array(100).fill(true).map((el, i) => 1970 + i);\n\n\n//получение даты в mm-dd-YYYY\nexport const getDate = date => {\n  const fullDate = date ? new Date(date) : new Date();\n  const dd = fullDate.getDate();\n  const mm = fullDate.getMonth() + 1;\n  const YYYY = fullDate.getFullYear();\n\n  return `${mm < 10 ? `0${mm}` : mm}-${dd < 10 ? `0${dd}` : dd}-${YYYY}`;\n};\n\n\nexport const getMonthAndYear = () => {\n  let startDate = new Date();\n  return (month) => {\n    const date = new Date (new Date(+startDate).setMonth(month - 1));\n    startDate = +date\n    return {\n      month: date.getMonth() + 1,\n      year: date.getFullYear()\n    }\n  }\n}\n\n// трансформация даты в формат mm-dd-YYYY\nexport const transformDateFormat = (date) => {\n    const splitD = date.split(\"-\");\n    const dd = splitD[0] < 10 ? `${splitD[0]}` : splitD[0];\n    const mm = splitD[1] < 10 ? `${splitD[1]}` : splitD[1];\n    return `${mm}-${dd}-${splitD[2]}`;\n};\n\n\n// создание поля\nexport const createFullField = (year, month) => {\n  const firstDate = new Date(`${month}-01-${year}`);\n\n  const lastDate = new Date((new Date((new Date(`${month}-01-${year}`)).setMonth(month))).setDate(0));\n\n\n  const firstDay = firstDate.getUTCDay();\n  const lastDay = lastDate.getUTCDay();\n  const datesLength = lastDate.getDate() + 7 + firstDay + 7 + (7 - lastDay) - 1;\n\n  return new Array(+datesLength < 56 ? 56 + 14 + 28 : +datesLength + 14 + 28).fill(true).map((_el, i) => {\n    const date = new Date(+firstDate);\n    date.setDate(i - 14 - firstDay + 1);\n    return date;\n  })\n};\nexport const createEndDates = (startDate) => {\n  return new Array(14).fill(true).map((el, i) => {\n    const date = new Date(+startDate);\n    date.setDate(startDate.getDate() + i + 1);\n    return date\n  })\n}\nexport const createStartDates = (startDate) => {\n  return new Array(14).fill(true).map((el, i) => {\n    const date = new Date(+startDate);\n    date.setDate(startDate.getDate() - 14 + i);\n    return date\n  })\n}\n\n\n\nexport const getMonth = date => date.split(\"-\")[0];\nexport const getYear = date => date.split(\"-\")[2];\n\n\nexport const transformToNeedFormat = (date, target = \"mm-dd-YYYY\") => {\n  if (!date) return;\n  if (target = \"dd-mm-YYYY\") {\n    const newDate = date.split(\"-\");\n    return `${newDate[1]}-${newDate[0]}-${newDate[2]}`;\n  }\n  if (target = \"mm-dd-YYYY\") {\n    const newDate = date.split(\"-\");\n    return `${newDate[1]}-${newDate[0]}-${newDate[2]}`;\n  }\n  return date;\n};\n\n\n\nconst day = 86400000;\nexport const createRangeDates = (dates) => {\n  const newDates = dates\n    .map(el => +(new Date(el)))\n    .sort();\n\n  const diff = (newDates[1] - newDates[0]) / day;\n  const period = new Array(+diff + 1)\n    .fill(true)\n    .map((_el, i) => getDate(+newDates[0] + i * day));\n    return period\n}\nexport const createSelected = (dates, select) => {\n  if (select === 'one') return dates \n  if (select === 'in') return  dates\n  if (select === 'multy') return  createRangeDates(dates)\n  console.log('lol', dates, select)\n} \nexport const createHoveredDates = (hover, select) => {\n  const arr = [hover, select].map(el => +(new Date(el))).sort();\n  const diff = (arr[1] - arr[0]) / day;\n  const period = new Array(+diff)\n    .fill(true)\n    .map((el, i) => getDate(arr[0] + (i + 1) * day));\n  return period;\n};","import React from \"react\";\nimport { DaysWrapper, WeekDay } from \"./styleds\";\nimport { days } from \"./utils\";\nexport const WeekDays = () => {\n  return (\n    <DaysWrapper>\n      {days.map(d => (\n        <WeekDay key={d}>{d}</WeekDay>\n      ))}\n    </DaysWrapper>\n  );\n};\n","import React, { useEffect, useRef, useCallback, useState } from \"react\";\nimport { DatasWrapper, MonthDay, EventDot, EventsBlock, EventsPopover } from \"./styleds\";\nimport {\n  getDate,\n  getMonth,\n} from \"./utils\";\n\n\n\n\n\nexport const MonthDays = ({\n  dates,\n  month,\n  onChange,\n  selectedDates,\n  changeMonth,\n  changeYear,\n  onHover,\n  rangeDates,\n  events,\n  x,\n  y\n}) => {\n  const [eventsBlock, showEventsBlock] = useState({})\n  const datesWrapperRef = useRef({})\n  useEffect(() => {\n    datesWrapperRef.current.scrollTop = 100;\n  }, [datesWrapperRef.current])\n\n  useEffect(() => {\n    // if (!datesWrapperRef.current.scrollTop) datesWrapperRef.current.scrollTop = 10;\n    // if (datesWrapperRef.current.scrollTop > 340) datesWrapperRef.current.scrollTop = 340;\n    const offsetWeeks = parseInt(datesWrapperRef.current.scrollTop / 50) + 4;\n    const targetDate = dates[(offsetWeeks* 7) + 7]\n    changeMonth(targetDate.getMonth() + 1);\n    changeYear(targetDate.getFullYear())\n  }, [datesWrapperRef.current.scrollTop, dates])\n\n\n\n  const handleMouseOver = (e, el, events) => {\n    onHover(el);\n    if (events.length) {\n      showEventsBlock({\n        top: e.clientY,\n        left: e.clientX,\n        content: events\n      })\n    } else {\n      showEventsBlock({})\n    }\n\n  }\n\n\n  return (\n    <>\n    { eventsBlock.top && eventsBlock.left &&\n      <EventsPopover\n        top={eventsBlock.top}\n        left={eventsBlock.left}\n      >\n        {eventsBlock.content.map(({ desc, priority }) => (\n          <p>\n            Priority - {priority}. {desc}\n          </p>\n          )\n        )}\n      </EventsPopover>\n\n    }\n    <DatasWrapper ref={datesWrapperRef} x={x} y={y} >\n      {dates.map(date => getDate(date)).map((el, i) => {\n        let currentEvents = events.filter(({ date }) => date === el);\n\n        return (\n          <MonthDay\n            hovered={rangeDates.some(d => d === el)}\n            currentMonth={+month === +getMonth(el)}\n            currentDate={el === getDate()}\n            selected={selectedDates.some(d => d === el)}\n            onClick={() => onChange(el)}\n            onMouseOver={(e) => handleMouseOver(e, el, currentEvents)}\n            key={el}\n          >\n            {el.split(\"-\")[1]}\n            {\n              currentEvents.length ? (\n                <EventsBlock>\n                   {currentEvents.map(({ priority }, i) =>\n                      <EventDot priority={priority} />\n                    )}\n                </EventsBlock>\n              ) : null\n            }\n          </MonthDay>\n      )}\n      )\n    }\n    </DatasWrapper>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Wrapper, MonthNameWrapper, MonthWrapper } from \"./styleds\";\nimport {\n  getDate,\n  getMonth,\n  transformDateFormat,\n  createFullField,\n  transformToNeedFormat,\n  getYear,\n  months,\n  years,\n  createEndDates,\n  createStartDates,\n  createRangeDates,\n  createSelected,\n  createHoveredDates\n} from \"./utils\";\nimport { WeekDays } from \"./week\";\nimport { MonthDays } from \"./month\";\n\n\n\n\nconst App = ({\n  values = [],\n  select = \"one\",\n  events = [],\n  onApply = () => {}\n}) => {\n  const monthWrapperRef = useRef()\n  const [coordsMonth, changeCoordsMonth] = useState({ x: 0, y: 0 });\n  const [month, changeMonth] = useState(getMonth(getDate()));\n  const [year, changeYear] = useState(getYear(getDate()));\n  const [dates, changeDates] = useState(createFullField(year, month));\n  const [selectedDates, changeSelectedDates] = useState(\n      createSelected(values.map(date => transformDateFormat(date)),  select)\n  );\n  const [mappedEvents] = useState(\n      events.map(event => ({ ...event, date: transformDateFormat(event.date) }))\n    )\n\n\n\n  const [rangeDates, changeRangeDates] = useState([]);\n\n\n  const handleHover = el => {\n    if (select === \"multy\" && selectedDates.length === 1) {\n      changeRangeDates(createHoveredDates(el, selectedDates[0]));\n    }\n  };\n\n\n  const handleScroll = (e) => {\n    if (e.deltaY == 100) {\n      const newDates = [\n        ...dates.slice(14),\n        ...createEndDates(dates[dates.length - 1])\n      ];\n      changeDates(newDates)\n    }\n    if (e.deltaY == -100) {\n      const newDates = [\n        ...createStartDates(dates[0]),\n        ...dates.slice(0, dates.length - 14),\n      ];\n      changeDates(newDates)\n    }\n  }\n\n\n  const changeSelectMonth = e => {\n    const { currentTarget : { value: newMonth } } = e\n    changeDates(createFullField(year, newMonth));\n    changeMonth(newMonth);\n  };\n\n  const changeSelectYear = e => {\n    const { currentTarget : { value: newYear } } = e\n    changeDates(createFullField(newYear, month))\n    changeYear(newYear);\n  };\n\n  const handleChange = useCallback(\n    date => {\n      if (select === \"one\") {\n        changeSelectedDates([date]);\n        return;\n      }\n      if (select === \"in\") {\n        if (selectedDates.some(d => d === date)) {\n          changeSelectedDates([...selectedDates.filter(d => d !== date)]);\n          return;\n        }\n        changeSelectedDates([...selectedDates, date]);\n        return;\n      }\n      if (select === \"multy\") {\n        if (selectedDates.length > 1 || !selectedDates.length) {\n          changeSelectedDates([date]);\n        }\n        if (selectedDates.length === 1) {\n          const period =  createRangeDates([...selectedDates, date])\n          changeSelectedDates(period);\n          changeRangeDates([])\n        }\n      }\n    },\n    [selectedDates]\n  );\n\n  const handleApply = useCallback(() => {\n    if (select === \"multy\") {\n      const newSelectedDates = [\n        transformToNeedFormat(selectedDates[0], 'dd-mm-YYYY'),\n        transformToNeedFormat(selectedDates[selectedDates.length - 1], 'dd-mm-YYYY')\n      ];\n      onApply(newSelectedDates);\n    } else {\n      onApply([ ...selectedDates.map(date => transformToNeedFormat(date, 'dd-mm-YYYY'))]);\n    }\n  }, [selectedDates]);\n\n\n\n    const handleClear = useCallback(() => {\n    changeSelectedDates([]);\n  }, [selectedDates]);\n\n  useEffect(() => {\n    if (monthWrapperRef.current) {\n      const { x, y } = monthWrapperRef.current.getBoundingClientRect()\n      changeCoordsMonth({ x, y })\n    }\n  }, [monthWrapperRef.current])\n\n\n\n\n  return (\n    <Wrapper  onWheel={handleScroll}  >\n      <MonthNameWrapper>\n        <select onChange={changeSelectMonth}>\n          {months.map((el, i) => {\n            return (\n              <option value={i + 1} selected={i + 1 === +month} key={el}>\n                {months[i]}\n              </option>\n            );\n          })}\n        </select>\n        <select onChange={changeSelectYear}>\n          {years.map((el, i) => {\n            return (\n              <option value={el} selected={+el === +year} key={el}>\n                {el}\n              </option>\n            );\n          })}\n        </select>\n      </MonthNameWrapper>\n      <WeekDays />\n      <MonthWrapper ref={ monthWrapperRef } >\n        <MonthDays\n          onChange={handleChange}\n          selectedDates={selectedDates}\n          dates={dates}\n          month={month}\n          select={select}\n          changeMonth={changeMonth}\n          changeYear={changeYear}\n          rangeDates={ rangeDates }\n          onHover={ handleHover }\n          events={ mappedEvents }\n          x={coordsMonth.x}\n          y={coordsMonth.y}\n      />\n      </MonthWrapper>\n      <div\n        style={{\n          float: \"right\",\n          marginTop: \"10px\"\n        }}\n      >\n        <button\n          style={{ fontSize: \"20px\", padding: \"3px\", margin: \"5px\" }}\n          onClick={handleClear}\n        >\n          Clear\n        </button>\n        <button\n          style={{ fontSize: \"20px\", padding: \"3px\", margin: \"5px\" }}\n          onClick={handleApply}\n        >\n          Apply\n        </button>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport \"./index.css\";\n\nconst dummyEvents = [\n  { date: '17-12-2019', desc: 'This is first event.', priority: 1 },\n  { date: '17-12-2019', desc: 'This is second event.', priority: 2 },\n  { date: '17-12-2019', desc: 'This is third event.', priority: 3 },\n  { date: '16-12-2019', desc: 'This is first event.', priority: 1 },\n  { date: '20-12-2019', desc: 'This is second event.', priority: 2 },\n  { date: '07-01-2020', desc: 'This is third event.', priority: 3 },\n  { date: '05-12-2019', desc: 'This is first event.', priority: 1 },\n  { date: '03-01-2020', desc: 'This is second event.', priority: 2 },\n  { date: '08-12-2019', desc: 'This is third event.', priority: 3 },\n]\n\nrender(\n  <div style={{ display: 'flex' }} >\n    <div  style={{ width: '400px', textAlign: 'center', marginTop: '100px' }}>\n      Диапазон выбора\n      <App\n        select=\"multy\"\n        onApply={date => console.log(\"Selected dates is \", date)}\n        values={[\"10-12-2019\", \"27-12-2019\"]}\n        events={ dummyEvents  }\n        />\n    </div>\n    <div  style={{ width: '400px', textAlign: 'center', marginTop: '100px' }}>\n      Несколько дат \n      <App\n        select=\"in\"\n        onApply={date => console.log(\"Selected dates is \", date)}\n        values={[\"15-12-2019\", \"25-10-2019\"]}\n        events={ dummyEvents  }\n        />\n    </div>\n    <div  style={{ width: '400px', textAlign: 'center', marginTop: '100px' }}>\n      Одна дата\n      <App\n        select=\"one\"\n        onApply={date => console.log(\"Selected dates is \", date)}\n        values={[\"15-12-2019\"]}\n        events={ dummyEvents  }\n        />\n    </div>\n    \n  </div>\n    ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}