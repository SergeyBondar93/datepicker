{"version":3,"sources":["styleds.js","utils.js","week.js","month.js","app.js","index.js"],"names":["Wrapper","styled","div","MonthNameWrapper","WeekDay","h3","DaysWrapper","DatasWrapper","attrs","x","y","style","top","left","MonthDay","currentMonth","currentDate","selected","hovered","MonthWrapper","EventsBlock","EventDot","priority","EventsPopover","days","months","years","Array","fill","map","el","i","getDate","date","fullDate","Date","dd","mm","getMonth","YYYY","getFullYear","transformDateFormat","splitD","split","createFullField","year","month","firstDate","lastDate","setMonth","setDate","firstDay","getUTCDay","lastDay","datesLength","_el","transformToNeedFormat","newDate","createRangeDates","dates","newDates","sort","diff","WeekDays","d","key","MonthDays","onChange","selectedDates","changeMonth","changeYear","onHover","rangeDates","events","useState","eventsBlock","showEventsBlock","datesWrapperRef","useRef","console","log","useEffect","current","scrollTop","offsetWeeks","parseInt","targetDate","content","desc","ref","currentEvents","filter","some","onClick","onMouseOver","e","length","clientY","clientX","handleMouseOver","App","values","select","onApply","monthWrapperRef","coordsMonth","changeCoordsMonth","changeDates","createSelected","changeSelectedDates","event","mappedEvents","changeRangeDates","handleChange","useCallback","period","handleApply","newSelectedDates","handleClear","getBoundingClientRect","onWheel","deltaY","slice","startDate","createStartDates","newMonth","currentTarget","value","newYear","hover","arr","createHoveredDates","float","marginTop","fontSize","padding","margin","dummyEvents","render","display","width","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.428e757f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 360px;\r\n  border: 1px solid black;\r\n  padding: 0;\r\n  margin: 30px;\r\n`;\r\n\r\nexport const MonthNameWrapper = styled.div`\r\n  height: 30px;\r\n  outline: 1px solid black;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport const MonthName = styled.h3`\r\n  text-align: center;\r\n`;\r\nexport const WeekDay = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-basis: calc(100% / 7);\r\n  outline: 1px solid black;\r\n`;\r\nexport const DaysWrapper = styled.div`\r\n  display: flex;\r\n`;\r\nexport const DatasWrapper = styled.div.attrs(({x,y}) => ({\r\n  style: {\r\n    top: `${y}px`, \r\n    left: `${x + 5}px`, \r\n  }\r\n}))`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  ::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n  \r\n\r\n  \r\n  width: 360px;\r\n  position: fixed;\r\n  height: 350px;\r\n  overflow-y: scroll;\r\n\r\n\r\n\r\n  \r\n`;\r\n\r\nconst getBgc = ({ currentMonth, currentDate, selected, hovered }) => {\r\n  if (selected && currentDate) return \"rgba(153, 0, 0)\";\r\n  if (selected && currentMonth) return \"rgba(255, 0, 0, 0.8)\";\r\n  if (selected) return \"rgba(255, 0, 0, 0.4)\";\r\n  if (currentDate) return \"rgba(255, 0, 0, 1)\";\r\n  if (hovered) return \"rgba(126, 246, 252)\";\r\n  if (currentMonth) return \"rgba(255, 0, 0, 0.2)\";\r\n  return;\r\n};\r\n\r\nexport const MonthDay = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  flex-basis: 50px;\r\n  cursor: pointer;\r\n  height: 50px;\r\n  background-color: ${getBgc};\r\n\r\n\r\n`;\r\nexport const MonthWrapper = styled.div`\r\n  height: 350px;\r\n  overflow: hidden;\r\n  border: 5px solid red;\r\n`;\r\n\r\nexport const EventsBlock = styled.div`\r\n  display: flex; \r\n  position: absolute; \r\n  transform: translateY(18px);\r\n`;\r\n\r\nconst getColor = ({ priority }) => {\r\n  switch (priority) {\r\n    case 1:\r\n      return '#eddf3e'\r\n    case 2:\r\n      return '#f77800'\r\n    case 3:\r\n      return '#780000'\r\n    default:\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const EventDot = styled.div`\r\n  width: 8px; \r\n  height: 8px; \r\n  background-color: ${getColor};  \r\n  border-radius: 50%;\r\n`\r\n\r\nexport const EventsPopover = styled.div.attrs(({ top, left }) => ({\r\n  style: {\r\n    top: `${top + 10}px`,\r\n    left: `${left + 10}px`\r\n  }\r\n}))`\r\n  position: fixed;\r\n  z-index: 99999;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  width: 150px;\r\n`","export const days = [\"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\", \"вс\"];\r\nexport const months = [\r\n  \"Январь\",\r\n  \"Февраль\",\r\n  \"Март\",\r\n  \"Апрель\",\r\n  \"Май\",\r\n  \"Июнь\",\r\n  \"Июль\",\r\n  \"Август\",\r\n  \"Сентябрь\",\r\n  \"Октябрь\",\r\n  \"Ноябрь\",\r\n  \"Декабрь\"\r\n];\r\nexport const years = new Array(100).fill(true).map((el, i) => 1970 + i);\r\n\r\n\r\n//получение даты в mm-dd-YYYY\r\nexport const getDate = date => {\r\n  const fullDate = date ? new Date(date) : new Date();\r\n  const dd = fullDate.getDate();\r\n  const mm = fullDate.getMonth() + 1;\r\n  const YYYY = fullDate.getFullYear();\r\n\r\n  return `${mm < 10 ? `0${mm}` : mm}-${dd < 10 ? `0${dd}` : dd}-${YYYY}`;\r\n};\r\n\r\n\r\nexport const getMonthAndYear = () => {\r\n  let startDate = new Date();\r\n  return (month) => {\r\n    const date = new Date (new Date(+startDate).setMonth(month - 1));\r\n    startDate = +date\r\n    return {\r\n      month: date.getMonth() + 1,\r\n      year: date.getFullYear()\r\n    }\r\n  }\r\n}\r\n\r\n// трансформация даты в формат mm-dd-YYYY\r\nexport const transformDateFormat = (date) => {\r\n    const splitD = date.split(\"-\");\r\n    const dd = splitD[0] < 10 ? `${splitD[0]}` : splitD[0];\r\n    const mm = splitD[1] < 10 ? `${splitD[1]}` : splitD[1];\r\n    return `${mm}-${dd}-${splitD[2]}`;\r\n};\r\n\r\n\r\n// создание поля\r\nexport const createFullField = (year, month) => {\r\n  const firstDate = new Date(`${month}-01-${year}`);\r\n\r\n  const lastDate = new Date((new Date((new Date(`${month}-01-${year}`)).setMonth(month))).setDate(0));\r\n\r\n\r\n  const firstDay = firstDate.getUTCDay();\r\n  const lastDay = lastDate.getUTCDay();\r\n  const datesLength = lastDate.getDate() + 7 + firstDay + 7 + (7 - lastDay) - 1;\r\n\r\n  return new Array(+datesLength < 56 ? 56 + 14 + 28 : +datesLength + 14 + 28).fill(true).map((_el, i) => {\r\n    const date = new Date(+firstDate);\r\n    date.setDate(i - 14 - firstDay + 1);\r\n    return date;\r\n  })\r\n};\r\nexport const createEndDates = (startDate) => {\r\n  return new Array(14).fill(true).map((el, i) => {\r\n    const date = new Date(+startDate);\r\n    date.setDate(startDate.getDate() + i + 1);\r\n    return date\r\n  })\r\n}\r\nexport const createStartDates = (startDate) => {\r\n  return new Array(14).fill(true).map((el, i) => {\r\n    const date = new Date(+startDate);\r\n    date.setDate(startDate.getDate() - 14 + i);\r\n    return date\r\n  })\r\n}\r\n\r\n\r\n\r\nexport const getMonth = date => date.split(\"-\")[0];\r\nexport const getYear = date => date.split(\"-\")[2];\r\n\r\n\r\nexport const transformToNeedFormat = (date, target = \"mm-dd-YYYY\") => {\r\n  if (!date) return;\r\n  if (target = \"dd-mm-YYYY\") {\r\n    const newDate = date.split(\"-\");\r\n    return `${newDate[1]}-${newDate[0]}-${newDate[2]}`;\r\n  }\r\n  if (target = \"mm-dd-YYYY\") {\r\n    const newDate = date.split(\"-\");\r\n    return `${newDate[1]}-${newDate[0]}-${newDate[2]}`;\r\n  }\r\n  return date;\r\n};\r\n\r\n\r\n\r\nconst day = 86400000;\r\nexport const createRangeDates = (dates) => {\r\n  const newDates = dates\r\n    .map(el => +(new Date(el)))\r\n    .sort();\r\n\r\n  const diff = (newDates[1] - newDates[0]) / day;\r\n  const period = new Array(+diff + 1)\r\n    .fill(true)\r\n    .map((_el, i) => getDate(+newDates[0] + i * day));\r\n    return period\r\n}\r\nexport const createSelected = (dates, select) => {\r\n  if (select === 'one') return dates \r\n  if (select === 'in') return  dates\r\n  if (select === 'multy') return  createRangeDates(dates)\r\n  console.log('lol', dates, select)\r\n} \r\nexport const createHoveredDates = (hover, select) => {\r\n  const arr = [hover, select].map(el => +(new Date(el))).sort();\r\n  const diff = (arr[1] - arr[0]) / day;\r\n  const period = new Array(+diff)\r\n    .fill(true)\r\n    .map((el, i) => getDate(arr[0] + (i + 1) * day));\r\n  return period;\r\n};","import React from \"react\";\r\nimport { DaysWrapper, WeekDay } from \"./styleds\";\r\nimport { days } from \"./utils\";\r\nexport const WeekDays = () => {\r\n  return (\r\n    <DaysWrapper>\r\n      {days.map(d => (\r\n        <WeekDay key={d}>{d}</WeekDay>\r\n      ))}\r\n    </DaysWrapper>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useCallback, useState } from \"react\";\r\nimport { DatasWrapper, MonthDay, EventDot, EventsBlock, EventsPopover } from \"./styleds\";\r\nimport {\r\n  getDate,\r\n  getMonth,\r\n} from \"./utils\";\r\n\r\n\r\n\r\n\r\n\r\nexport const MonthDays = ({\r\n  dates,\r\n  month,\r\n  onChange,\r\n  selectedDates,\r\n  changeMonth,\r\n  changeYear,\r\n  onHover,\r\n  rangeDates,\r\n  events,\r\n  x,\r\n  y\r\n}) => {\r\n  const [eventsBlock, showEventsBlock] = useState({})\r\n  const datesWrapperRef = useRef({})\r\n  console.log(x, y)\r\n  useEffect(() => {\r\n    datesWrapperRef.current.scrollTop = 100;\r\n  }, [datesWrapperRef.current])\r\n  \r\n  useEffect(() => {\r\n    // if (!datesWrapperRef.current.scrollTop) datesWrapperRef.current.scrollTop = 10;\r\n    // if (datesWrapperRef.current.scrollTop > 340) datesWrapperRef.current.scrollTop = 340;\r\n    const offsetWeeks = parseInt(datesWrapperRef.current.scrollTop / 50) + 4;\r\n    const targetDate = dates[(offsetWeeks* 7) + 7]\r\n    changeMonth(targetDate.getMonth() + 1);\r\n    changeYear(targetDate.getFullYear())\r\n  }, [datesWrapperRef.current.scrollTop, dates])\r\n\r\n  \r\n  \r\n  const handleMouseOver = (e, el, events) => {\r\n    onHover(el);\r\n    if (events.length) {\r\n      showEventsBlock({\r\n        top: e.clientY,\r\n        left: e.clientX,\r\n        content: events\r\n      })\r\n    } else {\r\n      showEventsBlock({})\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    { eventsBlock.top && eventsBlock.left && \r\n      <EventsPopover\r\n        top={eventsBlock.top}\r\n        left={eventsBlock.left}\r\n      >\r\n        {eventsBlock.content.map(({ desc, priority }) => (\r\n          <p>\r\n            Priority - {priority}. {desc}\r\n          </p>\r\n          )\r\n        )}\r\n      </EventsPopover>\r\n\r\n    }\r\n    <DatasWrapper ref={datesWrapperRef} x={x} y={y} >\r\n      {dates.map(date => getDate(date)).map((el, i) => {\r\n        let currentEvents = events.filter(({ date }) => date === el);\r\n\r\n        return (\r\n          <MonthDay\r\n            hovered={rangeDates.some(d => d === el)}\r\n            currentMonth={+month === +getMonth(el)}\r\n            currentDate={el === getDate()}\r\n            selected={selectedDates.some(d => d === el)}\r\n            onClick={() => onChange(el)}\r\n            onMouseOver={(e) => handleMouseOver(e, el, currentEvents)}\r\n            key={el}\r\n          >\r\n            {el.split(\"-\")[1]}\r\n            {\r\n              currentEvents.length ? (\r\n                <EventsBlock>\r\n                   {currentEvents.map(({ priority }, i) => \r\n                      <EventDot priority={priority} />\r\n                    )} \r\n                </EventsBlock>\r\n              ) : null\r\n            }\r\n          </MonthDay>\r\n      )}\r\n      )\r\n    }\r\n    </DatasWrapper>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { Wrapper, MonthNameWrapper, MonthWrapper } from \"./styleds\";\r\nimport {\r\n  getDate,\r\n  getMonth,\r\n  transformDateFormat,\r\n  createFullField,\r\n  transformToNeedFormat,\r\n  getYear,\r\n  months, \r\n  years,\r\n  createEndDates,\r\n  createStartDates,\r\n  createRangeDates,\r\n  createSelected,\r\n  createHoveredDates\r\n} from \"./utils\";\r\nimport { WeekDays } from \"./week\";\r\nimport { MonthDays } from \"./month\";\r\n\r\n\r\n\r\n\r\nconst App = ({\r\n  values = [],\r\n  select = \"one\",\r\n  events = [],\r\n  onApply = () => {}\r\n}) => {\r\n  const monthWrapperRef = useRef()\r\n  const [coordsMonth, changeCoordsMonth] = useState({ x: 0, y: 0 });\r\n  const [month, changeMonth] = useState(getMonth(getDate()));\r\n  const [year, changeYear] = useState(getYear(getDate()));\r\n  const [dates, changeDates] = useState(createFullField(year, month));\r\n  const [selectedDates, changeSelectedDates] = useState(\r\n      createSelected(values.map(date => transformDateFormat(date)),  select)\r\n  );\r\n  const [mappedEvents] = useState(\r\n      events.map(event => ({ ...event, date: transformDateFormat(event.date) }))\r\n    )\r\n\r\n\r\n\r\n  const [rangeDates, changeRangeDates] = useState([]);\r\n  \r\n  \r\n  const handleHover = el => {\r\n    if (select === \"multy\" && selectedDates.length === 1) {\r\n      changeRangeDates(createHoveredDates(el, selectedDates[0]));\r\n    }\r\n  };  \r\n\r\n\r\n\r\n  const handleScroll = (e) => {\r\n    if (e.deltaY == 100) {\r\n      const newDates = [\r\n        ...dates.slice(14),\r\n        ...createEndDates(dates[dates.length - 1])\r\n      ];\r\n      changeDates(newDates)\r\n    }\r\n    if (e.deltaY == -100) {\r\n      const newDates = [\r\n        ...createStartDates(dates[0]),\r\n        ...dates.slice(0, dates.length - 14),\r\n      ];\r\n      changeDates(newDates)\r\n    }\r\n  }\r\n\r\n\r\n  const changeSelectMonth = e => {\r\n    const { currentTarget : { value: newMonth } } = e\r\n    changeDates(createFullField(year, newMonth));\r\n    changeMonth(newMonth);\r\n  };\r\n\r\n  const changeSelectYear = e => {\r\n    const { currentTarget : { value: newYear } } = e\r\n    changeDates(createFullField(newYear, month))\r\n    changeYear(newYear);\r\n  };\r\n\r\n  const handleChange = useCallback(\r\n    date => {\r\n      if (select === \"one\") {\r\n        changeSelectedDates([date]);\r\n        return;\r\n      }\r\n      if (select === \"in\") {\r\n        if (selectedDates.some(d => d === date)) {\r\n          changeSelectedDates([...selectedDates.filter(d => d !== date)]);\r\n          return;\r\n        }\r\n        changeSelectedDates([...selectedDates, date]);\r\n        return;\r\n      }\r\n      if (select === \"multy\") {\r\n        if (selectedDates.length > 1 || !selectedDates.length) {\r\n          changeSelectedDates([date]);\r\n        }\r\n        if (selectedDates.length === 1) {\r\n          const period =  createRangeDates([...selectedDates, date])\r\n          changeSelectedDates(period);\r\n          changeRangeDates([])\r\n        }\r\n      }\r\n    },\r\n    [selectedDates]\r\n  );\r\n\r\n  const handleApply = useCallback(() => {\r\n    if (select === \"multy\") {\r\n      const newSelectedDates = [\r\n        transformToNeedFormat(selectedDates[0], 'dd-mm-YYYY'),\r\n        transformToNeedFormat(selectedDates[selectedDates.length - 1], 'dd-mm-YYYY')\r\n      ];\r\n      onApply(newSelectedDates);\r\n    } else {\r\n      onApply([transformToNeedFormat(selectedDates, 'dd-mm-YYYY')]);\r\n    }\r\n  }, [selectedDates]);\r\n\r\n\r\n\r\n    const handleClear = useCallback(() => {\r\n    changeSelectedDates([]);\r\n  }, [selectedDates]);\r\n\r\n  useEffect(() => {\r\n    if (monthWrapperRef.current) {\r\n      const { x, y } = monthWrapperRef.current.getBoundingClientRect()\r\n      changeCoordsMonth({ x, y })\r\n    }\r\n  }, [monthWrapperRef.current])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper  onWheel={handleScroll}  >\r\n      <MonthNameWrapper>\r\n        <select onChange={changeSelectMonth}>\r\n          {months.map((el, i) => {\r\n            return (\r\n              <option value={i + 1} selected={i + 1 === +month} key={el}>\r\n                {months[i]}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <select onChange={changeSelectYear}>\r\n          {years.map((el, i) => {\r\n            return (\r\n              <option value={el} selected={+el === +year} key={el}>\r\n                {el}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </MonthNameWrapper>\r\n      <WeekDays />\r\n      <MonthWrapper ref={ monthWrapperRef } >\r\n        <MonthDays\r\n          onChange={handleChange}\r\n          selectedDates={selectedDates}\r\n          dates={dates}\r\n          month={month}\r\n          select={select}\r\n          changeMonth={changeMonth}\r\n          changeYear={changeYear}\r\n          rangeDates={ rangeDates }\r\n          onHover={ handleHover }\r\n          events={ mappedEvents }\r\n          x={coordsMonth.x}\r\n          y={coordsMonth.y}\r\n      />\r\n      </MonthWrapper>\r\n      <div\r\n        style={{\r\n          float: \"right\",\r\n          marginTop: \"10px\"\r\n        }}\r\n      >\r\n        <button\r\n          style={{ fontSize: \"20px\", padding: \"3px\", margin: \"5px\" }}\r\n          onClick={handleClear}\r\n        >\r\n          Clear\r\n        </button>\r\n        <button\r\n          style={{ fontSize: \"20px\", padding: \"3px\", margin: \"5px\" }}\r\n          onClick={handleApply}\r\n        >\r\n          Apply\r\n        </button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./app\";\r\nimport \"./index.css\";\r\n\r\nconst dummyEvents = [\r\n  { date: '17-12-2019', desc: 'This is first event.', priority: 1 },\r\n  { date: '17-12-2019', desc: 'This is second event.', priority: 2 },\r\n  { date: '17-12-2019', desc: 'This is third event.', priority: 3 },\r\n  { date: '16-12-2019', desc: 'This is first event.', priority: 1 },\r\n  { date: '20-12-2019', desc: 'This is second event.', priority: 2 },\r\n  { date: '07-01-2020', desc: 'This is third event.', priority: 3 },\r\n  { date: '05-12-2019', desc: 'This is first event.', priority: 1 },\r\n  { date: '03-01-2020', desc: 'This is second event.', priority: 2 },\r\n  { date: '08-12-2019', desc: 'This is third event.', priority: 3 },\r\n]\r\n\r\nrender(\r\n  <div style={{ display: 'flex' }} >\r\n    <div  style={{ width: '400px', textAlign: 'center', marginTop: '100px' }}>\r\n      Диапазон выбора\r\n      <App\r\n        select=\"multy\"\r\n        onApply={date => console.log(\"Selected dates is \", date)}\r\n        values={[\"10-12-2019\", \"27-12-2019\"]}\r\n        events={ dummyEvents  }\r\n        />\r\n    </div>\r\n    <div  style={{ width: '400px', textAlign: 'center', marginTop: '100px' }}>\r\n      Несколько дат \r\n      <App\r\n        select=\"in\"\r\n        onApply={date => console.log(\"Selected dates is \", date)}\r\n        values={[\"15-12-2019\", \"25-10-2019\"]}\r\n        events={ dummyEvents  }\r\n        />\r\n    </div>\r\n    <div  style={{ width: '400px', textAlign: 'center', marginTop: '100px' }}>\r\n      Одна дата\r\n      <App\r\n        select=\"one\"\r\n        onApply={date => console.log(\"Selected dates is \", date)}\r\n        values={[\"15-12-2019\"]}\r\n        events={ dummyEvents  }\r\n        />\r\n    </div>\r\n    \r\n  </div>\r\n    ,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}